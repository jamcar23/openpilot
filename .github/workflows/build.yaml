name: openpilot build
on:
  push:
    branches:
      - src
  pull_request:
    branches:
      - src
  

env:
  RUN: docker run --shm-size 1G --rm tmppilot /bin/sh -c
  PERSIST: docker run --shm-size 1G --name tmppilot tmppilot /bin/sh -c
  CI_RUN: docker run -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID --rm tmppilotci /bin/bash -c
  UNIT_TEST: coverage run --append -m unittest discover
  BUILD: |
      docker pull $(grep -ioP '(?<=^from)\s+\S+' Dockerfile.openpilot) || true
      docker pull docker.io/commaai/openpilotci:latest || true
      docker build --cache-from docker.io/commaai/openpilotci:latest -t tmppilot -f Dockerfile.openpilot .

jobs:
  build_release:
    name: build release
    runs-on: ubuntu-16.04
    timeout-minutes: 50
    env:
      TEST_DIR: tmppilot
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Strip non-release files
      run: |
        mkdir $TEST_DIR
        cp -pR --parents $(cat release/files_common) $TEST_DIR
        cp Dockerfile.openpilot $TEST_DIR

        # need this to build on x86
        cp -pR --parents phonelibs/libyuv phonelibs/snpe \
                         external/bin selfdrive/modeld/runners $TEST_DIR

        # need these so docker copy won't fail
        cp Pipfile Pipfile.lock .pylintrc .coveragerc-app .pre-commit-config.yaml $TEST_DIR
        cd $TEST_DIR
        mkdir laika laika_repo tools
    - name: Build Docker image
      run: cd $TEST_DIR && eval "$BUILD"
    - name: Build openpilot and run quick check
      run: |
          $RUN "cd /tmp/openpilot && \
                scons -j$(nproc) && \
                $UNIT_TEST selfdrive/car"

  github_push_prebuilt:
    name: github push prebuilt
    runs-on: ubuntu-16.04
    timeout-minutes: 50
    if: github.ref == 'refs/heads/src' && github.event_name == 'push' && github.repository == 'jamcar23/openpilot'
    needs: [build_release, static_analysis, unit_tests]
    env:
      BRANCH: r2++
      TARGET_DIR: tmp_op_ci
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Prepare release files
        run: |
          chmod +x release/build_release_ci.sh
          ./release/build_release_ci.sh

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH }}
          directory: ${{ env.TARGET_DIR }}
          force: true


  static_analysis:
    name: static analysis
    runs-on: ubuntu-16.04
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Docker image
        run: eval "$BUILD"
      - name: pre-commit
        run: $RUN "cd /tmp/openpilot/ && git init && git add -A && pre-commit run --all"

  unit_tests:
    name: unit tests
    runs-on: ubuntu-16.04
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Docker image
        run: eval "$BUILD"
      - name: Run unit tests
        run: |
          $PERSIST "cd /tmp/openpilot && \
                    scons -j$(nproc) && \
                    coverage run selfdrive/test/test_fingerprints.py && \
                    $UNIT_TEST common && \
                    $UNIT_TEST opendbc/can && \
                    $UNIT_TEST selfdrive/boardd && \
                    $UNIT_TEST selfdrive/controls && \
                    $UNIT_TEST selfdrive/monitoring && \
                    $UNIT_TEST selfdrive/loggerd && \
                    $UNIT_TEST selfdrive/car && \
                    $UNIT_TEST selfdrive/locationd && \
                    $UNIT_TEST selfdrive/athena && \
                    $UNIT_TEST tools/lib/tests"
      - name: Upload coverage to Codecov
        run: |
          docker commit tmppilot tmppilotci
          $CI_RUN "cd /tmp/openpilot && bash <(curl -s https://codecov.io/bash) -v -F unit_tests"
